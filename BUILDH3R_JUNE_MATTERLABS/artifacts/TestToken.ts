export default ({
    "TestToken": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "symbol",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "burn",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "burnFrom",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "subtractedValue",
              "type": "uint256"
            }
          ],
          "name": "decreaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "addedValue",
              "type": "uint256"
            }
          ],
          "name": "increaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "mint",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "renounceOwnership",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "transferOwnership",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        }
      ],
      "metadata": {
        "optimizer_settings": {
          "is_debug_logging_enabled": false,
          "is_fallback_to_size_enabled": false,
          "is_system_request_memoization_disabled": false,
          "is_verify_each_enabled": false,
          "level_back_end": "Aggressive",
          "level_middle_end": "Aggressive",
          "level_middle_end_size": "Zero"
        },
        "solc_metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys `amount` tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/buildh3r-zksync-workshop/contracts/TestToken.sol\":\"TestToken\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"/buildh3r-zksync-workshop/contracts/TestToken.sol\":{\"keccak256\":\"0x7ce72deed5fd3748bc070cb0fb9e916976a5c159174bb5f69e1a8865a2cf0a24\",\"license\":\"Unlicensed\",\"urls\":[\"bzz-raw://c6d190c212fd783ac429c7095dd19d14d90dd8048148a3d280b0bd20b2e1007a\",\"dweb:/ipfs/QmPFf4CwcRTPeAsHY9uopCN5133jeHyPppD43AY5XKcZXj\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x0d19410453cda55960a818e02bd7c18952a5c8fe7a3036e81f0d599f34487a7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c0f62d3d5bef22b5ca00cc3903e7de6152cb68d2d22401a463f373cda54c00f\",\"dweb:/ipfs/QmSfzjZux7LC7NW2f7rjCXTHeFMUCWERqDkhpCTBy7kxTe\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
        "solc_version": "0.8.19",
        "solc_zkvm_edition": null,
        "zk_version": "1.4.0"
      },
      "evm": {
        "legacyAssembly": null,
        "assembly": "\t.text\n\t.file\t\"TestToken.sol:TestToken\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tnop\tstack+=[8]\n\tptr.add\tr1, r0, r7\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tadd\tr7, r0, r1\n\tshr.s\t96, r1, r1\n\tand\t@CPI0_0[0], r1, r1\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_1\n\tsub.s!\t4, r1, r2\n\tjump.lt\t@.BB0_2\n\tld\tr7, r2\n\tshr.s\t224, r2, r2\n\tsub.s!\t@CPI0_19[0], r2, r3\n\tjump.le\t@.BB0_76\n\tsub.s!\t@CPI0_20[0], r2, r3\n\tjump.le\t@.BB0_88\n\tsub.s!\t@CPI0_21[0], r2, r3\n\tjump.le\t@.BB0_94\n\tsub.s!\t@CPI0_22[0], r2, r3\n\tjump.eq\t@.BB0_180\n\tsub.s!\t@CPI0_23[0], r2, r3\n\tjump.eq\t@.BB0_186\n\tsub.s!\t@CPI0_24[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r7, r1\n\tld\tr1, r6\n\tsub.s!\t@CPI0_8[0], r6, r1\n\tjump.gt\t@.BB0_2\n\tadd\t5, r0, r1\n\tsload\tr1, r2\n\tand\t@CPI0_8[0], r2, r3\n\tcontext.caller\tr5\n\tsub!\tr3, r5, r3\n\tjump.ne\t@.BB0_135\n\tsub!\tr6, r0, r3\n\tjump.ne\t@.BB0_197\n\tadd\t@CPI0_17[0], r0, r1\n\tst.1\t128, r1\n\tadd\t32, r0, r1\n\tst.1\t132, r1\n\tadd\t38, r0, r1\n\tst.1\t164, r1\n\tadd\t@CPI0_43[0], r0, r1\n\tst.1\t196, r1\n\tadd\t@CPI0_44[0], r0, r1\n\tst.1\t228, r1\n\tadd\t@CPI0_45[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_1:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tadd\t@CPI0_1[0], r1, r2\n\tsub.s!\t@CPI0_2[0], r2, r2\n\tjump.gt\t@.BB0_6\n.BB0_4:\n\tadd\t@CPI0_56[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n.BB0_5:\n\tst.1\t4, r1\n\tadd\t@CPI0_57[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_6:\n\tadd\t159, r1, r2\n\tand\t@CPI0_3[0], r2, r2\n\tst.1\t64, r2\n\tand\t31, r1, r2\n\tshr.s!\t5, r1, r3\n\tjump.eq\t@.BB0_198\n\tadd\tr0, r0, r4\n.BB0_8:\n\tshl.s\t5, r4, r5\n\tptr.add\tr7, r5, r6\n\tld\tr6, r6\n\tadd\t128, r5, r5\n\tst.1\tr5, r6\n\tadd\t1, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB0_8\n.BB0_198:\n\tsub!\tr2, r0, r4\n\tjump.eq\t@.BB0_10\n\tshl.s\t5, r3, r3\n\tptr.add\tr7, r3, r4\n\tshl.s\t3, r2, r2\n\tadd\t128, r3, r3\n\tld.1\tr3, r5\n\tshl\tr5, r2, r5\n\tshr\tr5, r2, r5\n\tld\tr4, r4\n\tsub\t256, r2, r2\n\tshr\tr4, r2, r4\n\tshl\tr4, r2, r2\n\tor\tr2, r5, r2\n\tst.1\tr3, r2\n.BB0_10:\n\tsub.s!\t64, r1, r2\n\tjump.lt\t@.BB0_2\n\tld.1\t128, r5\n\tsub.s!\t@CPI0_4[0], r5, r2\n\tjump.gt\t@.BB0_2\n\tadd\t128, r1, r2\n\tadd\t159, r5, r3\n\tsub!\tr3, r2, r3\n\tjump.ge\t@.BB0_2\n\tadd\t128, r5, r4\n\tld.1\tr4, r3\n\tsub.s!\t@CPI0_4[0], r3, r6\n\tjump.gt\t@.BB0_4\n\tadd\t63, r3, r6\n\tsub.s\t32, r0, r9\n\tand\tr6, r9, r6\n\tld.1\t64, r10\n\tadd\tr10, r6, r6\n\tsub!\tr6, r10, r7\n\tadd\t0, r0, r7\n\tadd.lt\t1, r0, r7\n\tsub.s!\t@CPI0_4[0], r6, r8\n\tjump.gt\t@.BB0_4\n\tand!\t1, r7, r7\n\tjump.ne\t@.BB0_4\n\tadd\tr9, r0, stack-[6]\n\tst.1\t64, r6\n\tadd\tr10, r0, stack-[8]\n\tst.1.inc\tr10, r3, r6\n\tadd\tr6, r0, stack-[7]\n\tadd\tr5, r3, r5\n\tadd\t160, r5, r5\n\tsub!\tr5, r2, r5\n\tjump.gt\t@.BB0_2\n\tsub!\tr3, r0, r5\n\tadd\tstack-[8], r0, r8\n\tjump.eq\t@.BB0_20\n\tadd\tr0, r0, r5\n.BB0_19:\n\tadd\t32, r5, r5\n\tadd\tr5, r8, r6\n\tadd\tr5, r4, r7\n\tld.1\tr7, r7\n\tst.1\tr6, r7\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB0_19\n.BB0_20:\n\tadd\tstack-[7], r3, r3\n\tst.1\tr3, r0\n\tld.1\t160, r4\n\tsub.s!\t@CPI0_4[0], r4, r3\n\tjump.gt\t@.BB0_2\n\tadd\t31, r4, r3\n\tadd\t@CPI0_5[0], r0, r5\n\tsub!\tr3, r1, r1\n\tadd\tr0, r0, r1\n\tadd.ge\tr5, r0, r1\n\tand\t@CPI0_5[0], r3, r3\n\tsub!\tr3, r0, r6\n\tadd.ge\tr0, r0, r5\n\tsub.s!\t@CPI0_5[0], r3, r3\n\tadd.ne\tr1, r0, r5\n\tsub!\tr5, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t128, r4, r3\n\tld.1\tr3, r1\n\tsub.s!\t@CPI0_4[0], r1, r5\n\tadd\tstack-[6], r0, r6\n\tjump.gt\t@.BB0_4\n\tadd\t63, r1, r5\n\tand\tr5, r6, r5\n\tld.1\t64, r8\n\tadd\tr8, r5, r5\n\tsub!\tr5, r8, r6\n\tadd\t0, r0, r6\n\tadd.lt\t1, r0, r6\n\tsub.s!\t@CPI0_4[0], r5, r7\n\tjump.gt\t@.BB0_4\n\tand!\t1, r6, r6\n\tjump.ne\t@.BB0_4\n\tst.1\t64, r5\n\tadd\tr8, r0, stack-[5]\n\tst.1.inc\tr8, r1, r5\n\tadd\tr5, r0, stack-[4]\n\tadd\tr4, r1, r4\n\tadd\t160, r4, r4\n\tsub!\tr4, r2, r2\n\tjump.gt\t@.BB0_2\n\tsub!\tr1, r0, r2\n\tadd\tstack-[5], r0, r6\n\tjump.eq\t@.BB0_29\n\tadd\tr0, r0, r2\n.BB0_28:\n\tadd\t32, r2, r2\n\tadd\tr2, r6, r4\n\tadd\tr2, r3, r5\n\tld.1\tr5, r5\n\tst.1\tr4, r5\n\tsub!\tr2, r1, r4\n\tjump.lt\t@.BB0_28\n.BB0_29:\n\tadd\tstack-[4], r1, r1\n\tst.1\tr1, r0\n\tadd\tstack-[8], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[3]\n\tsub.s!\t@CPI0_4[0], r1, r1\n\tjump.gt\t@.BB0_4\n\tadd\t3, r0, r1\n\tadd\tr1, r0, stack-[2]\n\tsload\tr1, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r1\n\tand\t127, r1, r3\n\tadd.ne\tr1, r0, r3\n\tadd\tr3, r0, stack-[1]\n\tsub.s!\t31, r3, r1\n\tadd\t0, r0, r1\n\tadd.gt\t1, r0, r1\n\tand\t1, r1, r1\n\tsub!\tr2, r1, r1\n\tjump.ne\t@.BB0_31\n\tadd\tstack-[1], r0, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_36\n\tadd\tstack-[2], r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_6[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[3], r0, r3\n\tadd\t31, r3, r2\n\tshr.s\t5, r2, r2\n\tsub.s!\t32, r3, r3\n\tadd.lt\tr0, r0, r2\n\tld\tr1, r3\n\tadd\tstack-[1], r0, r1\n\tadd\t31, r1, r1\n\tshr.s\t5, r1, r1\n\tadd\tr3, r1, r1\n\tadd\tr3, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.ge\t@.BB0_36\n.BB0_37:\n\tsstore\tr2, r0\n\tadd\t1, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.lt\t@.BB0_37\n.BB0_36:\n\tadd\tstack-[3], r0, r1\n\tsub.s!\t31, r1, r1\n\tjump.le\t@.BB0_46\n\tadd\tstack-[2], r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_6[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[3], r0, r3\n\tand!\tstack-[6], r3, r3\n\tadd\t32, r0, r2\n\tld\tr1, r1\n\tadd\tstack-[8], r0, r6\n\tjump.eq\t@.BB0_43\n\tadd\t32, r0, r2\n\tadd\tr0, r0, r4\n.BB0_42:\n\tadd\tr2, r6, r5\n\tld.1\tr5, r5\n\tsstore\tr1, r5\n\tadd\t32, r2, r2\n\tadd\t1, r1, r1\n\tadd\t32, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB0_42\n.BB0_43:\n\tsub.s!\tstack-[3], r3, r3\n\tjump.ge\t@.BB0_45\n\tadd\tstack-[3], r0, r3\n\tshl.s\t3, r3, r3\n\tand\t248, r3, r3\n\tsub.s\t1, r0, r4\n\tshr\tr4, r3, r3\n\txor\tr3, r4, r3\n\tadd\tstack-[8], r2, r2\n\tld.1\tr2, r2\n\tand\tr2, r3, r2\n\tsstore\tr1, r2\n.BB0_45:\n\tadd\tstack-[3], r0, r1\n\tshl.s\t1, r1, r1\n\tor\t1, r1, r1\n\tjump\t@.BB0_38\n.BB0_76:\n\tsub.s!\t@CPI0_32[0], r2, r3\n\tjump.gt\t@.BB0_82\n\tsub.s!\t@CPI0_38[0], r2, r3\n\tjump.gt\t@.BB0_80\n\tsub.s!\t@CPI0_41[0], r2, r3\n\tjump.eq\t@.BB0_99\n\tsub.s!\t@CPI0_42[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t64, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r7, r1\n\tld\tr1, r2\n\tsub.s!\t@CPI0_8[0], r2, r1\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r7, r1\n\tld\tr1, r3\n\tcontext.caller\tr1\n\tnear_call\tr0, @fun_approve, @DEFAULT_UNWIND\n\tjump\t@.BB0_185\n.BB0_88:\n\tsub.s!\t@CPI0_27[0], r2, r3\n\tjump.gt\t@.BB0_91\n\tsub.s!\t@CPI0_30[0], r2, r3\n\tjump.eq\t@.BB0_147\n\tsub.s!\t@CPI0_31[0], r2, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t5, r0, r1\n\tsload\tr1, r2\n\tand\t@CPI0_8[0], r2, r3\n\tcontext.caller\tr5\n\tsub!\tr3, r5, r3\n\tjump.ne\t@.BB0_135\n\tand\t@CPI0_7[0], r2, r2\n\tsstore\tr1, r2\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_10[0], r0, r4\n\tadd\tr0, r0, r6\n\tjump\t@.BB0_155\n.BB0_82:\n\tsub.s!\t@CPI0_33[0], r2, r3\n\tjump.gt\t@.BB0_85\n\tsub.s!\t@CPI0_36[0], r2, r3\n\tjump.eq\t@.BB0_121\n\tsub.s!\t@CPI0_37[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t64, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r7, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[8]\n\tsub.s!\t@CPI0_8[0], r1, r1\n\tjump.gt\t@.BB0_2\n\tcontext.caller\tr1\n\tadd\tr1, r0, stack-[5]\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tadd\tr1, r0, stack-[6]\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_13[0], r1, r1\n\tadd\t32784, r0, r2\n\tptr.add\tr7, r0, stack-[7]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tptr.add\tstack-[7], r0, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[8], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tptr.add.s\t36, r3, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[7]\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_13[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tadd\tstack-[7], r1, r3\n\tsub!\tr3, r1, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_70\n\tjump\t@.BB0_130\n.BB0_94:\n\tsub.s!\t@CPI0_25[0], r2, r3\n\tjump.eq\t@.BB0_162\n\tsub.s!\t@CPI0_26[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t64, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r7, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[8]\n\tsub.s!\t@CPI0_8[0], r1, r1\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r7, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[7]\n\tcontext.caller\tr1\n\tadd\tr1, r0, stack-[5]\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tadd\tr1, r0, stack-[6]\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_13[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[8], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_13[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tadd\tstack-[7], r0, r3\n\tsub!\tr1, r3, r2\n\tjump.ge\t@.BB0_179\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI0_48[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI0_49[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t37, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_17[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_50[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_80:\n\tsub.s!\t@CPI0_39[0], r2, r3\n\tjump.eq\t@.BB0_113\n\tsub.s!\t@CPI0_40[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t96, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r7, r1\n\tld\tr1, r1\n\tadd\tr1, r0, r3\n\tsub.s!\t@CPI0_8[0], r1, r1\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r7, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[8]\n\tsub.s!\t@CPI0_8[0], r1, r1\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t68, r7, r1\n\tld\tr1, r4\n\tadd\tr4, r0, stack-[7]\n\tcontext.caller\tr2\n\tadd\tr3, r0, r1\n\tadd\tr1, r0, stack-[6]\n\tadd\tr4, r0, r3\n\tnear_call\tr0, @fun_spendAllowance, @DEFAULT_UNWIND\n\tadd\tstack-[6], r0, r1\n\tadd\tstack-[8], r0, r2\n\tadd\tstack-[7], r0, r3\n\tjump\t@.BB0_184\n.BB0_91:\n\tsub.s!\t@CPI0_28[0], r2, r3\n\tjump.eq\t@.BB0_156\n\tsub.s!\t@CPI0_29[0], r2, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t5, r0, r1\n\tsload\tr1, r1\n\tand\t@CPI0_8[0], r1, r1\n\tjump\t@.BB0_123\n.BB0_85:\n\tsub.s!\t@CPI0_34[0], r2, r3\n\tjump.eq\t@.BB0_131\n\tsub.s!\t@CPI0_35[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r7, r1\n\tld\tr1, r2\n\tcontext.caller\tr1\n\tjump\t@.BB0_146\n.BB0_180:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t64, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r7, r1\n\tld\tr1, r2\n\tsub.s!\t@CPI0_8[0], r2, r1\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r7, r1\n\tld\tr1, r3\n\tcontext.caller\tr1\n.BB0_184:\n\tnear_call\tr0, @fun_transfer, @DEFAULT_UNWIND\n.BB0_185:\n\tadd\t1, r0, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r1\n\tor\t@CPI0_47[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_186:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t64, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r7, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_8[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r7, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[8]\n\tsub.s!\t@CPI0_8[0], r2, r2\n\tjump.gt\t@.BB0_2\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tst.1\t32, r1\n\tadd\t64, r0, r2\n\tadd\tr2, r0, stack-[7]\n\tadd\tr0, r0, r1\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n\tadd\tstack-[8], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\tr0, r0, r1\n\tadd\tstack-[7], r0, r2\n\tjump\t@.BB0_151\n.BB0_99:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t3, r0, r3\n\tsload\tr3, r2\n\tand!\t1, r2, r4\n\tshr.s\t1, r2, r5\n\tand\t127, r5, r6\n\tadd.ne\tr5, r0, r6\n\tsub.s!\t31, r6, r5\n\tadd\t0, r0, r5\n\tadd.gt\t1, r0, r5\n\txor\tr2, r5, r5\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB0_31\n\tst.1\t128, r6\n\tsub!\tr4, r0, r4\n\tjump.ne\t@.BB0_104\n\tsub.s\t256, r0, r3\n\tand\tr2, r3, r2\n\tst.1\t160, r2\n\tsub!\tr6, r0, r1\n\tadd\t192, r0, r1\n\tadd.eq\t160, r0, r1\n\tjump\t@.BB0_102\n.BB0_147:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r7, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_8[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t64, r0, r2\n\tadd\tr0, r0, r1\n.BB0_151:\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n\tjump\t@.BB0_115\n.BB0_121:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t18, r0, r1\n\tjump\t@.BB0_123\n.BB0_162:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t4, r0, r3\n\tsload\tr3, r2\n\tand!\t1, r2, r4\n\tshr.s\t1, r2, r5\n\tand\t127, r5, r6\n\tadd.ne\tr5, r0, r6\n\tsub.s!\t31, r6, r5\n\tadd\t0, r0, r5\n\tadd.gt\t1, r0, r5\n\txor\tr2, r5, r5\n\tand!\t1, r5, r5\n\tjump.eq\t@.BB0_164\n.BB0_31:\n\tadd\t@CPI0_56[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n\tjump\t@.BB0_5\n.BB0_113:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t2, r0, r1\n.BB0_115:\n\tsload\tr1, r1\n.BB0_123:\n\tst.1\t128, r1\n\tadd\t@CPI0_46[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_156:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t64, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r7, r1\n\tld\tr1, r1\n\tadd\tr1, r0, r4\n\tsub.s!\t@CPI0_8[0], r1, r1\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r7, r1\n\tld\tr1, r3\n\tadd\tr3, r0, stack-[7]\n\tcontext.caller\tr2\n\tadd\tr4, r0, r1\n\tadd\tr1, r0, stack-[8]\n\tnear_call\tr0, @fun_spendAllowance, @DEFAULT_UNWIND\n\tadd\tstack-[8], r0, r1\n\tadd\tstack-[7], r0, r2\n.BB0_146:\n\tnear_call\tr0, @fun_burn, @DEFAULT_UNWIND\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_131:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t64, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r7, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[8]\n\tsub.s!\t@CPI0_8[0], r1, r1\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r7, r1\n\tld\tr1, r4\n\tadd\t5, r0, r1\n\tsload\tr1, r1\n\tand\t@CPI0_8[0], r1, r1\n\tcontext.caller\tr2\n\tsub!\tr1, r2, r1\n\tjump.ne\t@.BB0_135\n\tsub!\tstack-[8], r0, r1\n\tjump.ne\t@.BB0_139\n\tadd\t@CPI0_17[0], r0, r1\n\tst.1\t128, r1\n\tadd\t32, r0, r1\n\tst.1\t132, r1\n\tadd\t31, r0, r1\n\tst.1\t164, r1\n\tadd\t@CPI0_16[0], r0, r1\n\tjump\t@.BB0_136\n.BB0_135:\n\tadd\t@CPI0_17[0], r0, r1\n\tst.1\t128, r1\n\tadd\t32, r0, r1\n\tst.1\t132, r1\n\tst.1\t164, r1\n\tadd\t@CPI0_54[0], r0, r1\n.BB0_136:\n\tst.1\t196, r1\n\tadd\t@CPI0_55[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_164:\n\tst.1\t128, r6\n\tsub!\tr4, r0, r4\n\tjump.ne\t@.BB0_167\n\tsub.s\t256, r0, r3\n\tand\tr2, r3, r2\n\tst.1\t160, r2\n\tsub!\tr6, r0, r1\n\tadd\t192, r0, r1\n\tadd.eq\t160, r0, r1\n\tjump\t@.BB0_165\n.BB0_104:\n\tst.1\t0, r3\n\tadd\t160, r0, r1\n\tsub!\tr6, r0, r2\n\tjump.eq\t@.BB0_108\n\tadd\t@CPI0_58[0], r0, r2\n\tadd\tr0, r0, r4\n.BB0_106:\n\tadd\tr4, r0, r3\n\tsload\tr2, r4\n\tadd\t160, r3, r5\n\tst.1\tr5, r4\n\tadd\t1, r2, r2\n\tadd\t32, r3, r4\n\tsub!\tr4, r6, r5\n\tjump.lt\t@.BB0_106\n\tadd\t192, r3, r1\n.BB0_102:\n\tadd\t31, r1, r1\n\tsub.s\t32, r0, r2\n\tand\tr1, r2, r1\n\tadd\t@CPI0_52[0], r1, r2\n\tsub.s!\t@CPI0_53[0], r2, r2\n\tjump.lt\t@.BB0_4\n\tjump\t@.BB0_108\n.BB0_167:\n\tst.1\t0, r3\n\tadd\t160, r0, r1\n\tsub!\tr6, r0, r2\n\tjump.eq\t@.BB0_171\n\tadd\t@CPI0_51[0], r0, r2\n\tadd\tr0, r0, r4\n.BB0_169:\n\tadd\tr4, r0, r3\n\tsload\tr2, r4\n\tadd\t160, r3, r5\n\tst.1\tr5, r4\n\tadd\t1, r2, r2\n\tadd\t32, r3, r4\n\tsub!\tr4, r6, r5\n\tjump.lt\t@.BB0_169\n\tadd\t192, r3, r1\n.BB0_165:\n\tadd\t31, r1, r1\n\tsub.s\t32, r0, r2\n\tand\tr1, r2, r1\n\tadd\t@CPI0_52[0], r1, r2\n\tsub.s!\t@CPI0_53[0], r2, r2\n\tjump.lt\t@.BB0_4\n.BB0_171:\n.BB0_108:\n\tadd\tr1, r0, stack-[8]\n\tst.1\t64, r1\n\tadd\t128, r0, r2\n\tnear_call\tr0, @abi_encode_string, @DEFAULT_UNWIND\n\tadd\tstack-[8], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.ge\tr2, r0, r4\n\tshl.s\t64, r4, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_197:\n\tand\t@CPI0_7[0], r2, r2\n\tor\tr2, r6, r2\n\tsstore\tr1, r2\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_10[0], r0, r4\n\tjump\t@.BB0_155\n.BB0_139:\n\tadd\t2, r0, r1\n\tsload\tr1, r3\n\tadd\tr3, r4, r2\n\tsub!\tr2, r3, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tand!\t1, r3, r3\n\tjump.eq\t@.BB0_140\n.BB0_70:\n\tadd\t@CPI0_56[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tjump\t@.BB0_5\n.BB0_179:\n\tsub\tr1, r3, r3\n.BB0_130:\n\tadd\tstack-[5], r0, r1\n\tadd\tstack-[8], r0, r2\n\tnear_call\tr0, @fun_approve, @DEFAULT_UNWIND\n\tld.1\t64, r1\n\tadd\tstack-[6], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_47[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_140:\n\tadd\tr4, r0, stack-[7]\n\tsstore\tr1, r2\n\tadd\tstack-[8], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_13[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tstack-[7], r0, r3\n\tadd\tr2, r3, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r3\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd\t@CPI0_0[0], r0, r4\n\tadd.ge\tr4, r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_6[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_14[0], r0, r4\n\tadd\tr0, r0, r5\n\tadd\tstack-[8], r0, r6\n.BB0_155:\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_46:\n\tsub!\tstack-[3], r0, r1\n\tadd\tr0, r0, r1\n\tjump.eq\t@.BB0_48\n\tadd\tstack-[7], r0, r1\n\tld.1\tr1, r1\n.BB0_48:\n\tadd\tstack-[3], r0, r4\n\tshl.s\t3, r4, r2\n\tsub.s\t1, r0, r3\n\tshr\tr3, r2, r2\n\txor\tr2, r3, r2\n\tand\tr1, r2, r1\n\tshl.s\t1, r4, r2\n\tor\tr1, r2, r1\n.BB0_38:\n\tadd\tstack-[2], r0, r2\n\tsstore\tr2, r1\n\tadd\tstack-[5], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[8]\n\tsub.s!\t@CPI0_4[0], r1, r1\n\tjump.gt\t@.BB0_4\n\tadd\t4, r0, r1\n\tadd\tr1, r0, stack-[7]\n\tsload\tr1, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r2\n\tand\t127, r2, r3\n\tadd.ne\tr2, r0, r3\n\tadd\tr3, r0, stack-[3]\n\tsub.s!\t31, r3, r2\n\tadd\t0, r0, r2\n\tadd.gt\t1, r0, r2\n\txor\tr1, r2, r1\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_31\n\tadd\tstack-[3], r0, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_54\n\tadd\tstack-[7], r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_6[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[8], r0, r3\n\tadd\t31, r3, r2\n\tshr.s\t5, r2, r2\n\tsub.s!\t32, r3, r3\n\tadd.lt\tr0, r0, r2\n\tld\tr1, r3\n\tadd\tstack-[3], r0, r1\n\tadd\t31, r1, r1\n\tshr.s\t5, r1, r1\n\tadd\tr3, r1, r1\n\tadd\tr3, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.ge\t@.BB0_54\n.BB0_55:\n\tsstore\tr2, r0\n\tadd\t1, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.lt\t@.BB0_55\n.BB0_54:\n\tadd\tstack-[8], r0, r1\n\tsub.s!\t31, r1, r1\n\tjump.le\t@.BB0_64\n\tadd\tstack-[7], r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_6[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[8], r0, r3\n\tand!\tstack-[6], r3, r3\n\tadd\t32, r0, r2\n\tld\tr1, r1\n\tadd\tstack-[5], r0, r6\n\tjump.eq\t@.BB0_61\n\tadd\t32, r0, r2\n\tadd\tr0, r0, r4\n.BB0_60:\n\tadd\tr2, r6, r5\n\tld.1\tr5, r5\n\tsstore\tr1, r5\n\tadd\t32, r2, r2\n\tadd\t1, r1, r1\n\tadd\t32, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB0_60\n.BB0_61:\n\tsub.s!\tstack-[8], r3, r3\n\tjump.ge\t@.BB0_63\n\tadd\tstack-[8], r0, r3\n\tshl.s\t3, r3, r3\n\tand\t248, r3, r3\n\tsub.s\t1, r0, r4\n\tshr\tr4, r3, r3\n\txor\tr3, r4, r3\n\tadd\tstack-[5], r2, r2\n\tld.1\tr2, r2\n\tand\tr2, r3, r2\n\tsstore\tr1, r2\n.BB0_63:\n\tadd\tstack-[8], r0, r1\n\tshl.s\t1, r1, r1\n\tor\t1, r1, r1\n\tjump\t@.BB0_56\n.BB0_64:\n\tsub!\tstack-[8], r0, r1\n\tadd\tr0, r0, r1\n\tjump.eq\t@.BB0_66\n\tadd\tstack-[4], r0, r1\n\tld.1\tr1, r1\n.BB0_66:\n\tadd\tstack-[8], r0, r4\n\tshl.s\t3, r4, r2\n\tsub.s\t1, r0, r3\n\tshr\tr3, r2, r2\n\txor\tr2, r3, r2\n\tand\tr1, r2, r1\n\tshl.s\t1, r4, r2\n\tor\tr1, r2, r1\n.BB0_56:\n\tadd\tstack-[7], r0, r2\n\tsstore\tr2, r1\n\tadd\t5, r0, r1\n\tsload\tr1, r2\n\tand\t@CPI0_7[0], r2, r3\n\tcontext.caller\tr6\n\tor\tr3, r6, r3\n\tsstore\tr1, r3\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[7]\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tshl.s\t192, r3, r1\n\tand\t@CPI0_8[0], r2, r5\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_10[0], r0, r4\n\tadd\tr6, r0, stack-[8]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tsub!\tstack-[8], r0, r1\n\tjump.ne\t@.BB0_69\n\tadd\tstack-[7], r0, r3\n\tadd\t68, r3, r1\n\tadd\t@CPI0_16[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t36, r3, r1\n\tadd\t31, r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_17[0], r0, r1\n\tst.1\tr3, r1\n\tadd\t4, r3, r1\n\tadd\t32, r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r3, r2\n\tadd.ge\tr1, r0, r3\n\tshl.s\t64, r3, r1\n\tor\t@CPI0_18[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_69:\n\tadd\t2, r0, r1\n\tsload\tr1, r2\n\tsub.s!\t@CPI0_11[0], r2, r3\n\tjump.ge\t@.BB0_70\n\tadd\t@CPI0_12[0], r2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[8], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_13[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\t@CPI0_12[0], r2, r2\n\tsstore\tr1, r2\n\tadd\t@CPI0_12[0], r0, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd\t@CPI0_0[0], r0, r4\n\tadd.ge\tr4, r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t192, r1, r1\n\tor\tr2, r1, r1\n\tor\t@CPI0_6[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_14[0], r0, r4\n\tadd\tr0, r0, r5\n\tadd\tstack-[8], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_15[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\nabi_encode_string:\n.func_begin1:\n\tadd\t32, r0, r3\n\tst.1.inc\tr1, r3, r4\n\tld.1\tr2, r3\n\tst.1\tr4, r3\n\tadd\t64, r1, r1\n\tsub!\tr3, r0, r4\n\tjump.eq\t@.BB1_3\n\tadd\tr0, r0, r4\n.BB1_2:\n\tadd\tr1, r4, r5\n\tadd\t32, r4, r4\n\tadd\tr4, r2, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB1_2\n.BB1_3:\n\tadd\tr1, r3, r2\n\tst.1\tr2, r0\n\tadd\t31, r3, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r2\n\tadd\tr1, r2, r1\n\tret\n.func_end1:\n\nfun_transfer:\n.func_begin2:\n\tnop\tstack+=[4]\n\tadd\tr3, r0, stack-[4]\n\tand!\t@CPI2_0[0], r1, r1\n\tjump.eq\t@.BB2_1\n\tand!\t@CPI2_0[0], r2, stack-[2]\n\tjump.eq\t@.BB2_4\n\tadd\tr1, r0, stack-[3]\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI2_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI2_1[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI2_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_6\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tr2, r0, stack-[1]\n\tsub.s!\tstack-[4], r2, r1\n\tjump.lt\t@.BB2_8\n\tadd\tstack-[3], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI2_1[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI2_1[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI2_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_6\n\tadd\tstack-[1], r0, r3\n\tsub.s\tstack-[4], r3, r2\n\tld\tr1, r1\n\tsstore\tr1, r2\n\tadd\tstack-[2], r0, r1\n\tst.1\t0, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI2_1[0], r1, r2\n\tadd.ge\t@CPI2_1[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI2_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_6\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tstack-[4], r0, r3\n\tadd\tr2, r3, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r3\n\tadd\t@CPI2_1[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI2_1[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI2_1[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI2_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI2_4[0], r0, r4\n\tadd\tstack-[3], r0, r5\n\tadd\tstack-[2], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB2_6\n\tret\n.BB2_6:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB2_1:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI2_11[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI2_12[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t37, r0, r3\n\tjump\t@.BB2_2\n.BB2_4:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI2_9[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI2_10[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t35, r0, r3\n\tjump\t@.BB2_2\n.BB2_8:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI2_5[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI2_6[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t38, r0, r3\n.BB2_2:\n\tst.1\tr2, r3\n\tadd\t@CPI2_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI2_1[0], r0, r2\n\tsub.s!\t@CPI2_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI2_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end2:\n\nfun_approve:\n.func_begin3:\n\tnop\tstack+=[3]\n\tand!\t@CPI3_0[0], r1, r1\n\tjump.eq\t@.BB3_1\n\tadd\tr3, r0, stack-[2]\n\tand!\t@CPI3_0[0], r2, stack-[3]\n\tjump.eq\t@.BB3_4\n\tadd\tr1, r0, stack-[1]\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI3_1[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI3_1[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI3_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tadd\tstack-[3], r0, r3\n\tjump.eq\t@.BB3_6\n\tld\tr1, r1\n\tst.1\t0, r3\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI3_1[0], r1, r2\n\tadd.ge\t@CPI3_1[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI3_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[3], r0, r6\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_6\n\tld\tr1, r1\n\tadd\tstack-[2], r0, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r2\n\tadd\t@CPI3_1[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI3_1[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI3_1[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI3_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI3_4[0], r0, r4\n\tadd\tstack-[1], r0, r5\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB3_6\n\tret\n.BB3_6:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB3_1:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI3_9[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI3_10[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t36, r0, r3\n\tjump\t@.BB3_2\n.BB3_4:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI3_5[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI3_6[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t34, r0, r3\n.BB3_2:\n\tst.1\tr2, r3\n\tadd\t@CPI3_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI3_1[0], r0, r2\n\tsub.s!\t@CPI3_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI3_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end3:\n\nfun_spendAllowance:\n.func_begin4:\n\tnop\tstack+=[5]\n\tadd\tr3, r0, stack-[3]\n\tadd\tr2, r0, stack-[4]\n\tand\t@CPI4_0[0], r1, r1\n\tadd\tr1, r0, stack-[5]\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tadd\tr1, r0, stack-[1]\n\tst.1\t32, r1\n\tadd\t@CPI4_1[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI4_1[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI4_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB4_1\n\tld\tr1, r1\n\tadd\tstack-[4], r0, r2\n\tand\t@CPI4_0[0], r2, r2\n\tadd\tr2, r0, stack-[4]\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI4_1[0], r1, r2\n\tadd.ge\t@CPI4_1[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI4_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB4_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub.s\t1, r0, r1\n\tadd\tr2, r0, stack-[2]\n\tsub!\tr2, r1, r1\n\tjump.eq\t@.BB4_5\n\tadd\tstack-[2], r0, r2\n\tsub.s!\tstack-[3], r2, r1\n\tjump.lt\t@.BB4_6\n\tsub!\tstack-[5], r0, r1\n\tjump.eq\t@.BB4_8\n\tsub!\tstack-[4], r0, r1\n\tjump.eq\t@.BB4_11\n\tadd\tstack-[5], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[1], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI4_1[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI4_1[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI4_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB4_1\n\tld\tr1, r1\n\tadd\tstack-[4], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI4_1[0], r1, r2\n\tadd.ge\t@CPI4_1[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI4_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB4_1\n\tadd\tstack-[2], r0, r3\n\tsub.s\tstack-[3], r3, r2\n\tld\tr1, r1\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r2\n\tadd\t@CPI4_1[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI4_1[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI4_1[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI4_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI4_4[0], r0, r4\n\tadd\tstack-[5], r0, r5\n\tadd\tstack-[4], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB4_1\n.BB4_5:\n\tret\n.BB4_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB4_6:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI4_11[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t29, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI4_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI4_1[0], r0, r2\n\tsub.s!\t@CPI4_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI4_12[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB4_8:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI4_9[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI4_10[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t36, r0, r3\n\tjump\t@.BB4_9\n.BB4_11:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI4_5[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI4_6[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t34, r0, r3\n.BB4_9:\n\tst.1\tr2, r3\n\tadd\t@CPI4_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI4_1[0], r0, r2\n\tsub.s!\t@CPI4_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI4_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end4:\n\nfun_burn:\n.func_begin5:\n\tnop\tstack+=[3]\n\tadd\tr2, r0, stack-[3]\n\tand!\t@CPI5_0[0], r1, r4\n\tjump.eq\t@.BB5_1\n\tst.1\t0, r4\n\tst.1\t32, r0\n\tadd\t@CPI5_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI5_1[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI5_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tadd\tr4, r0, stack-[2]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB5_4\n\tadd\tstack-[2], r0, r2\n\tld\tr1, r1\n\tsload\tr1, r3\n\tadd\tr3, r0, stack-[1]\n\tsub.s!\tstack-[3], r3, r1\n\tjump.lt\t@.BB5_6\n\tst.1\t0, r2\n\tst.1\t32, r0\n\tadd\t@CPI5_1[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI5_1[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI5_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB5_4\n\tadd\tstack-[3], r0, r3\n\tsub\tstack-[1], r3, r2\n\tld\tr1, r1\n\tsstore\tr1, r2\n\tadd\t2, r0, r1\n\tsload\tr1, r2\n\tsub\tr2, r3, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r3\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI5_1[0], r2, r3\n\tadd\t@CPI5_1[0], r0, r4\n\tadd.ge\tr4, r0, r2\n\tsub.s!\t@CPI5_1[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI5_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI5_4[0], r0, r4\n\tadd\tstack-[2], r0, r5\n\tadd\tr0, r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB5_4\n\tret\n.BB5_4:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB5_1:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI5_9[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI5_10[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t33, r0, r3\n\tjump\t@.BB5_2\n.BB5_6:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI5_5[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI5_6[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t34, r0, r3\n.BB5_2:\n\tst.1\tr2, r3\n\tadd\t@CPI5_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI5_1[0], r0, r2\n\tsub.s!\t@CPI5_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI5_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end5:\n\n__sha3:\n.func_begin6:\n\tadd\t@CPI6_0[0], r0, r3\n\tsub.s!\t@CPI6_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tsub.s!\t@CPI6_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI6_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI6_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB6_2\n\tld\tr1, r1\n\tret\n.BB6_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end6:\n\n__farcall:\n.func_begin7:\n.tmp0:\n\tfar_call\tr1, r2, @.BB7_2\n.tmp1:\n\tadd\t1, r0, r2\n\tret\n.BB7_2:\n.tmp2:\n\tadd\tr0, r0, r2\n\tret\n.func_end7:\n\n__staticcall:\n.func_begin8:\n.tmp3:\n\tfar_call.static\tr1, r2, @.BB8_2\n.tmp4:\n\tadd\t1, r0, r2\n\tret\n.BB8_2:\n.tmp5:\n\tadd\tr0, r0, r2\n\tret\n.func_end8:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\nCPI2_1:\nCPI3_1:\nCPI4_1:\nCPI5_1:\nCPI6_0:\n\t.cell 4294967295\nCPI0_1:\n\t.cell -18446744073709551457\nCPI0_2:\n\t.cell -18446744073709551489\nCPI0_3:\n\t.cell 8589934560\nCPI0_4:\n\t.cell 18446744073709551615\nCPI0_5:\n\t.cell -57896044618658097711785492504343953926634992332820282019728792003956564819968\nCPI0_6:\nCPI2_3:\nCPI3_3:\nCPI4_3:\nCPI5_3:\n\t.cell 904625697166532776746648320380374280103671757735618107014721178055227736064\nCPI0_7:\n\t.cell -1461501637330902918203684832716283019655932542976\nCPI0_8:\nCPI2_0:\nCPI3_0:\nCPI4_0:\nCPI5_0:\n\t.cell 1461501637330902918203684832716283019655932542975\nCPI0_9:\nCPI6_1:\n\t.cell 904625697166532776746648320380374280103671755200316906558262375061821325312\nCPI0_10:\n\t.cell -52524777015005588113349992707137368332388074750292320778649315033004770043936\nCPI0_11:\n\t.cell -100000000000000000000\nCPI0_12:\n\t.cell 100000000000000000000\nCPI0_13:\nCPI2_2:\nCPI3_2:\nCPI4_2:\nCPI5_2:\n\t.cell 904625697166532776746648320380374280103671760270919307471179981048634146816\nCPI0_14:\nCPI2_4:\nCPI5_4:\n\t.cell -15402802100530019096323380498944738953123845089667699673314898783681816316945\nCPI0_15:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\nCPI0_16:\n\t.cell 31354931781638678563069525067809233856775101976563302031013534919694566519552\nCPI0_17:\nCPI2_7:\nCPI3_7:\nCPI4_7:\nCPI5_7:\n\t.cell 3963877391197344453575983046348115674221700746820753546331534351508065746944\nCPI0_18:\nCPI4_12:\n\t.cell 7922816251426433759354395033600\nCPI0_19:\n\t.cell 1889567280\nCPI0_20:\n\t.cell 2514000704\nCPI0_21:\n\t.cell 2835717306\nCPI0_22:\n\t.cell 2835717307\nCPI0_23:\n\t.cell 3714247998\nCPI0_24:\n\t.cell 4076725131\nCPI0_25:\n\t.cell 2514000705\nCPI0_26:\n\t.cell 2757214935\nCPI0_27:\n\t.cell 2043438991\nCPI0_28:\n\t.cell 2043438992\nCPI0_29:\n\t.cell 2376452955\nCPI0_30:\n\t.cell 1889567281\nCPI0_31:\n\t.cell 1901074598\nCPI0_32:\n\t.cell 826074470\nCPI0_33:\n\t.cell 1086394136\nCPI0_34:\n\t.cell 1086394137\nCPI0_35:\n\t.cell 1117154408\nCPI0_36:\n\t.cell 826074471\nCPI0_37:\n\t.cell 961581905\nCPI0_38:\n\t.cell 404098524\nCPI0_39:\n\t.cell 404098525\nCPI0_40:\n\t.cell 599290589\nCPI0_41:\n\t.cell 117300739\nCPI0_42:\n\t.cell 157198259\nCPI0_43:\n\t.cell 35943731656364841964517558219894961445653631979235167635064085396828900499553\nCPI0_44:\n\t.cell 45408759099000846574684193736602357774271237157169010951590501707763511459840\nCPI0_45:\n\t.cell 10458117454244075803782624051200\nCPI0_46:\n\t.cell 2535301202817642044428229017600\nCPI0_47:\n\t.cell 2535301200456458802993406410752\nCPI0_48:\n\t.cell 14690266658072097593480850647027335513285713462661904985951319567533531463680\nCPI0_49:\n\t.cell 31354931781638678506476475496475743842680577777870365728514456330491174612855\nCPI0_50:\nCPI2_8:\nCPI3_8:\nCPI4_8:\nCPI5_8:\n\t.cell 10458117451882892562347801444352\nCPI0_51:\n\t.cell -53278079350709166316280423202849322519190186591071851114874353210178472783461\nCPI0_52:\n\t.cell -18446744073709551616\nCPI0_53:\n\t.cell -18446744073709551488\nCPI0_54:\n\t.cell 35943731656364841964516503116990081338611484598491072354577564874054038349170\nCPI0_55:\n\t.cell 7922816253787617000789217640448\nCPI0_56:\n\t.cell 35408467139433450592217433187231851964531694900788300625387963629091585785856\nCPI0_57:\n\t.cell 2852213850513516153367582212096\nCPI0_58:\n\t.cell -27889059366240281169193357100633332908378892778709981755071813198463099602853\nCPI2_5:\n\t.cell 44065838241030143116324720188876985940908656145555552347773292252211112312832\nCPI2_6:\n\t.cell 31354931781638678607228669297131712859100820671745083778533502622993977909346\nCPI2_9:\n\t.cell 45887578820189300338443374388718498632482616163288499555830078344056365121536\nCPI2_10:\n\t.cell 31354931781638678607228669297131712859126084785867252355217498662940140921970\nCPI2_11:\n\t.cell 45433405612597180762055095701412804886438245671210399661410036396145969725440\nCPI2_12:\n\t.cell 31354931781638678607228669297131712859107492772550336241160036866987736981860\nCPI3_4:\nCPI4_4:\n\t.cell -52305948261162578668367882225327028569797882979485679342215860919519743330011\nCPI3_5:\nCPI4_5:\n\t.cell 52219164999525148860834357634456956735281286572158918307284071279203377479680\nCPI3_6:\nCPI4_6:\n\t.cell 31354931781638678487916134672869638488806705378895508030211234510262059168357\nCPI3_9:\nCPI4_9:\n\t.cell 51742913093258732729005998692887265601192425265805909375210916622055285719040\nCPI3_10:\nCPI4_10:\n\t.cell 31354931781638678487916134672869638484047149969764982831501014746446650500196\nCPI4_11:\n\t.cell 31354931781638678538084197150757782427756587561754988975511141185730285404160\nCPI5_5:\n\t.cell 44957423563285989266247004906403561635230327756000124389404269791890710200320\nCPI5_6:\n\t.cell 31354931781638678494316026001312189103416802390932084224065329695412615668078\nCPI5_9:\n\t.cell 52015977587075634662932278421871521105961125924018222127100086566054726205440\nCPI5_10:\n\t.cell 31354931781638678494316026001340845558170976982936511063842609339963588896115\n",
        "bytecode": {
          "object": ""
        },
        "methodIdentifiers": {
          "allowance(address,address)": "dd62ed3e",
          "approve(address,uint256)": "095ea7b3",
          "balanceOf(address)": "70a08231",
          "burn(uint256)": "42966c68",
          "burnFrom(address,uint256)": "79cc6790",
          "decimals()": "313ce567",
          "decreaseAllowance(address,uint256)": "a457c2d7",
          "increaseAllowance(address,uint256)": "39509351",
          "mint(address,uint256)": "40c10f19",
          "name()": "06fdde03",
          "owner()": "8da5cb5b",
          "renounceOwnership()": "715018a6",
          "symbol()": "95d89b41",
          "totalSupply()": "18160ddd",
          "transfer(address,uint256)": "a9059cbb",
          "transferFrom(address,address,uint256)": "23b872dd",
          "transferOwnership(address)": "f2fde38b"
        }
      },
      "irOptimized": "/// @use-src 0:\"/buildh3r-zksync-workshop/contracts/TestToken.sol\", 1:\"@openzeppelin/contracts/access/Ownable.sol\", 2:\"@openzeppelin/contracts/token/ERC20/ERC20.sol\", 3:\"@openzeppelin/contracts/token/ERC20/IERC20.sol\", 4:\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\", 5:\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\", 6:\"@openzeppelin/contracts/utils/Context.sol\"\nobject \"TestToken_49\" {\n    code {\n        {\n            /// @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\"\n            let _1 := 64\n            mstore(_1, memoryguard(0x80))\n            if callvalue() { revert(0, 0) }\n            let programSize := datasize(\"TestToken_49\")\n            let argSize := sub(codesize(), programSize)\n            let memoryDataOffset := allocate_memory(argSize)\n            codecopy(memoryDataOffset, programSize, argSize)\n            let _2 := add(memoryDataOffset, argSize)\n            if slt(sub(_2, memoryDataOffset), _1)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\"\n            let offset := mload(memoryDataOffset)\n            let _3 := sub(shl(64, 1), 1)\n            if gt(offset, _3)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\"\n            let value0 := abi_decode_string_fromMemory(add(memoryDataOffset, offset), _2)\n            let _4 := 32\n            let offset_1 := mload(add(memoryDataOffset, _4))\n            if gt(offset_1, _3)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\"\n            let value1 := abi_decode_string_fromMemory(add(memoryDataOffset, offset_1), _2)\n            let newLen := mload(value0)\n            if gt(newLen, _3)\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\" */ 0x24)\n            }\n            /// @src 2:2046:2059  \"_name = name_\"\n            let _5 := 0x03\n            /// @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\"\n            let _6 := sload(/** @src 2:2046:2059  \"_name = name_\" */ _5)\n            /// @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\"\n            let length := /** @src -1:-1:-1 */ 0\n            /// @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\"\n            let _7 := 1\n            length := shr(_7, _6)\n            let outOfPlaceEncoding := and(_6, _7)\n            if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n            if eq(outOfPlaceEncoding, lt(length, _4))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x22)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\" */ 0x24)\n            }\n            let _8 := 31\n            if gt(length, _8)\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 2:2046:2059  \"_name = name_\" */ _5)\n                /// @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\"\n                let data := keccak256(/** @src -1:-1:-1 */ 0, /** @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\" */ _4)\n                let deleteStart := add(data, shr(5, add(newLen, _8)))\n                if lt(newLen, _4) { deleteStart := data }\n                let _9 := add(data, shr(5, add(length, _8)))\n                let start := deleteStart\n                for { } lt(start, _9) { start := add(start, _7) }\n                {\n                    sstore(start, /** @src -1:-1:-1 */ 0)\n                }\n            }\n            /// @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\"\n            let srcOffset := /** @src -1:-1:-1 */ 0\n            /// @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\"\n            srcOffset := _4\n            switch gt(newLen, _8)\n            case 1 {\n                let loopEnd := and(newLen, not(31))\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 2:2046:2059  \"_name = name_\" */ _5)\n                /// @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\"\n                let dstPtr := keccak256(/** @src -1:-1:-1 */ 0, /** @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\" */ _4)\n                let i := /** @src -1:-1:-1 */ 0\n                /// @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\"\n                for { } lt(i, loopEnd) { i := add(i, _4) }\n                {\n                    sstore(dstPtr, mload(add(value0, srcOffset)))\n                    dstPtr := add(dstPtr, _7)\n                    srcOffset := add(srcOffset, _4)\n                }\n                if lt(loopEnd, newLen)\n                {\n                    let lastValue := mload(add(value0, srcOffset))\n                    sstore(dstPtr, and(lastValue, not(shr(and(shl(/** @src 2:2046:2059  \"_name = name_\" */ _5, /** @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\" */ newLen), 248), not(0)))))\n                }\n                sstore(/** @src 2:2046:2059  \"_name = name_\" */ _5, /** @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\" */ add(shl(_7, newLen), _7))\n            }\n            default {\n                let value := /** @src -1:-1:-1 */ 0\n                /// @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\"\n                if newLen\n                {\n                    value := mload(add(value0, srcOffset))\n                }\n                sstore(/** @src 2:2046:2059  \"_name = name_\" */ _5, /** @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\" */ or(and(value, not(shr(shl(/** @src 2:2046:2059  \"_name = name_\" */ _5, /** @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\" */ newLen), not(0)))), shl(_7, newLen)))\n            }\n            let newLen_1 := mload(value1)\n            if gt(newLen_1, _3)\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\" */ shl(224, 0x4e487b71))\n                mstore(/** @src 2:2069:2086  \"_symbol = symbol_\" */ 0x04, /** @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\" */ 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\" */ 0x24)\n            }\n            /// @src 2:2069:2086  \"_symbol = symbol_\"\n            let _10 := 0x04\n            /// @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\"\n            let _11 := sload(/** @src 2:2069:2086  \"_symbol = symbol_\" */ _10)\n            /// @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\"\n            let length_1 := /** @src -1:-1:-1 */ 0\n            /// @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\"\n            length_1 := shr(_7, _11)\n            let outOfPlaceEncoding_1 := and(_11, _7)\n            if iszero(outOfPlaceEncoding_1)\n            {\n                length_1 := and(length_1, 0x7f)\n            }\n            if eq(outOfPlaceEncoding_1, lt(length_1, _4))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\" */ shl(224, 0x4e487b71))\n                mstore(/** @src 2:2069:2086  \"_symbol = symbol_\" */ _10, /** @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\" */ 0x22)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\" */ 0x24)\n            }\n            if gt(length_1, _8)\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 2:2069:2086  \"_symbol = symbol_\" */ _10)\n                /// @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\"\n                let data_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\" */ _4)\n                let deleteStart_1 := add(data_1, shr(5, add(newLen_1, _8)))\n                if lt(newLen_1, _4) { deleteStart_1 := data_1 }\n                let _12 := add(data_1, shr(5, add(length_1, _8)))\n                let start_1 := deleteStart_1\n                for { } lt(start_1, _12) { start_1 := add(start_1, _7) }\n                {\n                    sstore(start_1, /** @src -1:-1:-1 */ 0)\n                }\n            }\n            /// @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\"\n            let srcOffset_1 := /** @src -1:-1:-1 */ 0\n            /// @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\"\n            srcOffset_1 := _4\n            switch gt(newLen_1, _8)\n            case 1 {\n                let loopEnd_1 := and(newLen_1, not(31))\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 2:2069:2086  \"_symbol = symbol_\" */ _10)\n                /// @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\"\n                let dstPtr_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\" */ _4)\n                let i_1 := /** @src -1:-1:-1 */ 0\n                /// @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\"\n                for { } lt(i_1, loopEnd_1) { i_1 := add(i_1, _4) }\n                {\n                    sstore(dstPtr_1, mload(add(value1, srcOffset_1)))\n                    dstPtr_1 := add(dstPtr_1, _7)\n                    srcOffset_1 := add(srcOffset_1, _4)\n                }\n                if lt(loopEnd_1, newLen_1)\n                {\n                    let lastValue_1 := mload(add(value1, srcOffset_1))\n                    sstore(dstPtr_1, and(lastValue_1, not(shr(and(shl(/** @src 2:2046:2059  \"_name = name_\" */ _5, /** @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\" */ newLen_1), 248), not(0)))))\n                }\n                sstore(/** @src 2:2069:2086  \"_symbol = symbol_\" */ _10, /** @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\" */ add(shl(_7, newLen_1), _7))\n            }\n            default {\n                let value_1 := /** @src -1:-1:-1 */ 0\n                /// @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\"\n                if newLen_1\n                {\n                    value_1 := mload(add(value1, srcOffset_1))\n                }\n                sstore(/** @src 2:2069:2086  \"_symbol = symbol_\" */ _10, /** @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\" */ or(and(value_1, not(shr(shl(/** @src 2:2046:2059  \"_name = name_\" */ _5, /** @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\" */ newLen_1), not(0)))), shl(_7, newLen_1)))\n            }\n            let _13 := sload(/** @src 1:2518:2524  \"_owner\" */ 0x05)\n            /// @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\"\n            sstore(/** @src 1:2518:2524  \"_owner\" */ 0x05, /** @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\" */ or(and(_13, not(sub(shl(160, 1), 1))), /** @src 6:719:729  \"msg.sender\" */ caller()))\n            /// @src 1:2566:2606  \"OwnershipTransferred(oldOwner, newOwner)\"\n            let _14 := /** @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\" */ mload(_1)\n            /// @src 1:2566:2606  \"OwnershipTransferred(oldOwner, newOwner)\"\n            log3(/** @src -1:-1:-1 */ 0, 0, /** @src 1:2566:2606  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\" */ and(_13, sub(shl(160, 1), 1)), /** @src 6:719:729  \"msg.sender\" */ caller())\n            /// @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\"\n            if /** @src 2:8603:8624  \"account != address(0)\" */ iszero(/** @src 6:719:729  \"msg.sender\" */ caller())\n            /// @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\"\n            {\n                mstore(_14, shl(229, 4594637))\n                mstore(add(_14, /** @src 2:2069:2086  \"_symbol = symbol_\" */ _10), /** @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\" */ _4)\n                mstore(add(_14, 36), _8)\n                mstore(add(_14, 68), \"ERC20: mint to the zero address\")\n                revert(_14, /** @src 0:410:413  \"100\" */ 0x64)\n            }\n            /// @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\"\n            let _15 := sload(/** @src 2:8731:8753  \"_totalSupply += amount\" */ 0x02)\n            /// @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\"\n            let _16 := 0x056bc75e2d63100000\n            let sum := add(_15, _16)\n            if gt(_15, sum)\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\" */ shl(224, 0x4e487b71))\n                mstore(/** @src 2:2069:2086  \"_symbol = symbol_\" */ _10, /** @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\" */ 0x11)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\" */ 0x24)\n            }\n            sstore(/** @src 2:8731:8753  \"_totalSupply += amount\" */ 0x02, /** @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\" */ sum)\n            mstore(/** @src -1:-1:-1 */ 0, /** @src 6:719:729  \"msg.sender\" */ caller())\n            /// @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\"\n            mstore(_4, /** @src -1:-1:-1 */ 0)\n            /// @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\"\n            let dataSlot := keccak256(/** @src -1:-1:-1 */ 0, /** @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\" */ _1)\n            sstore(dataSlot, add(sload(/** @src 2:8899:8927  \"_balances[account] += amount\" */ dataSlot), /** @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\" */ _16))\n            /// @src 2:8952:8989  \"Transfer(address(0), account, amount)\"\n            let _17 := /** @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\" */ mload(_1)\n            mstore(_17, _16)\n            /// @src 2:8952:8989  \"Transfer(address(0), account, amount)\"\n            log3(_17, /** @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\" */ _4, /** @src 2:8952:8989  \"Transfer(address(0), account, amount)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, /** @src -1:-1:-1 */ 0, /** @src 6:719:729  \"msg.sender\" */ caller())\n            /// @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\"\n            let _18 := mload(_1)\n            let _19 := datasize(\"TestToken_49_deployed\")\n            codecopy(_18, dataoffset(\"TestToken_49_deployed\"), _19)\n            return(_18, _19)\n        }\n        function allocate_memory(size) -> memPtr\n        {\n            memPtr := mload(64)\n            let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n            if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr))\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(0, 0x24)\n            }\n            mstore(64, newFreePtr)\n        }\n        function abi_decode_string_fromMemory(offset, end) -> array\n        {\n            if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n            let _1 := mload(offset)\n            if gt(_1, sub(shl(64, 1), 1))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\" */ 0x24)\n            }\n            let _2 := 0x20\n            let array_1 := allocate_memory(add(and(add(_1, 0x1f), not(31)), _2))\n            mstore(array_1, _1)\n            if gt(add(add(offset, _1), _2), end)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\"\n            let i := /** @src -1:-1:-1 */ 0\n            /// @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\"\n            for { } lt(i, _1) { i := add(i, _2) }\n            {\n                mstore(add(add(array_1, i), _2), mload(add(add(offset, i), _2)))\n            }\n            mstore(add(add(array_1, _1), _2), /** @src -1:-1:-1 */ 0)\n            /// @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\"\n            array := array_1\n        }\n    }\n    /// @use-src 0:\"/buildh3r-zksync-workshop/contracts/TestToken.sol\", 1:\"@openzeppelin/contracts/access/Ownable.sol\", 2:\"@openzeppelin/contracts/token/ERC20/ERC20.sol\", 4:\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\", 6:\"@openzeppelin/contracts/utils/Context.sol\"\n    object \"TestToken_49_deployed\" {\n        code {\n            {\n                /// @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\"\n                let _1 := memoryguard(0x80)\n                let _2 := 64\n                mstore(_2, _1)\n                let _3 := 4\n                if iszero(lt(calldatasize(), _3))\n                {\n                    let _4 := 0\n                    switch shr(224, calldataload(_4))\n                    case 0x06fdde03 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        let ret := _4\n                        let slotValue := sload(/** @src 2:2244:2249  \"_name\" */ 0x03)\n                        /// @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\"\n                        let length := _4\n                        let _5 := 1\n                        length := shr(_5, slotValue)\n                        let outOfPlaceEncoding := and(slotValue, _5)\n                        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                        let _6 := 32\n                        if eq(outOfPlaceEncoding, lt(length, _6))\n                        {\n                            mstore(_4, shl(224, 0x4e487b71))\n                            mstore(_3, 0x22)\n                            revert(_4, 0x24)\n                        }\n                        mstore(_1, length)\n                        switch outOfPlaceEncoding\n                        case 0 {\n                            mstore(add(_1, _6), and(slotValue, not(255)))\n                            ret := add(add(_1, shl(5, iszero(iszero(length)))), _6)\n                        }\n                        case 1 {\n                            mstore(_4, /** @src 2:2244:2249  \"_name\" */ 0x03)\n                            /// @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\"\n                            let dataPos := 87903029871075914254377627908054574944891091886930582284385770809450030037083\n                            let i := _4\n                            for { } lt(i, length) { i := add(i, _6) }\n                            {\n                                mstore(add(add(_1, i), _6), sload(dataPos))\n                                dataPos := add(dataPos, _5)\n                            }\n                            ret := add(add(_1, i), _6)\n                        }\n                        let newFreePtr := add(_1, and(add(sub(ret, _1), 31), not(31)))\n                        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, _1))\n                        {\n                            mstore(_4, shl(224, 0x4e487b71))\n                            mstore(_3, 0x41)\n                            revert(_4, 0x24)\n                        }\n                        mstore(_2, newFreePtr)\n                        return(newFreePtr, sub(abi_encode_string(newFreePtr, _1), newFreePtr))\n                    }\n                    case 0x095ea7b3 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                        let value0 := abi_decode_address()\n                        /// @src 2:4606:4612  \"amount\"\n                        fun_approve(/** @src 6:719:729  \"msg.sender\" */ caller(), /** @src 2:4606:4612  \"amount\" */ value0, /** @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\" */ calldataload(36))\n                        let memPos := mload(_2)\n                        mstore(memPos, 1)\n                        return(memPos, 32)\n                    }\n                    case 0x18160ddd {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        let _7 := sload(/** @src 2:3342:3354  \"_totalSupply\" */ 0x02)\n                        /// @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\"\n                        let memPos_1 := mload(_2)\n                        mstore(memPos_1, _7)\n                        return(memPos_1, 32)\n                    }\n                    case 0x23b872dd {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), 96) { revert(_4, _4) }\n                        let value0_1 := abi_decode_address()\n                        let value1 := abi_decode_address_7055()\n                        let value := calldataload(68)\n                        /// @src 2:5387:5393  \"amount\"\n                        fun_spendAllowance(value0_1, /** @src 6:719:729  \"msg.sender\" */ caller(), /** @src 2:5387:5393  \"amount\" */ value)\n                        /// @src 2:5424:5430  \"amount\"\n                        fun_transfer(value0_1, value1, value)\n                        /// @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\"\n                        let memPos_2 := mload(_2)\n                        mstore(memPos_2, 1)\n                        return(memPos_2, 32)\n                    }\n                    case 0x313ce567 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        let memPos_3 := mload(_2)\n                        mstore(memPos_3, /** @src 2:3186:3188  \"18\" */ 0x12)\n                        /// @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\"\n                        return(memPos_3, 32)\n                    }\n                    case 0x39509351 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                        let value0_2 := abi_decode_address()\n                        mstore(_4, /** @src 6:719:729  \"msg.sender\" */ caller())\n                        /// @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\"\n                        mstore(32, 1)\n                        let _8 := keccak256(_4, _2)\n                        mstore(_4, and(value0_2, sub(shl(160, 1), 1)))\n                        mstore(32, _8)\n                        /// @src 2:6021:6059  \"allowance(owner, spender) + addedValue\"\n                        fun_approve(/** @src 6:719:729  \"msg.sender\" */ caller(), /** @src 2:6021:6059  \"allowance(owner, spender) + addedValue\" */ value0_2, checked_add_uint256(/** @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\" */ sload(keccak256(_4, _2)), calldataload(36)))\n                        let memPos_4 := mload(_2)\n                        mstore(memPos_4, 1)\n                        return(memPos_4, 32)\n                    }\n                    case 0x40c10f19 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                        let value0_3 := abi_decode_address()\n                        let value_1 := calldataload(36)\n                        /// @src 1:1063:1125  \"modifier onlyOwner() {...\"\n                        fun_checkOwner()\n                        /// @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\"\n                        let _9 := and(/** @src 2:8603:8624  \"account != address(0)\" */ value0_3, /** @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\" */ sub(shl(160, 1), 1))\n                        if /** @src 2:8603:8624  \"account != address(0)\" */ iszero(/** @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\" */ _9)\n                        {\n                            let memPtr := mload(_2)\n                            mstore(memPtr, shl(229, 4594637))\n                            mstore(add(memPtr, _3), 32)\n                            mstore(add(memPtr, 36), 31)\n                            mstore(add(memPtr, 68), \"ERC20: mint to the zero address\")\n                            revert(memPtr, 100)\n                        }\n                        sstore(/** @src 2:8731:8753  \"_totalSupply += amount\" */ 0x02, checked_add_uint256(/** @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\" */ sload(/** @src 2:8731:8753  \"_totalSupply += amount\" */ 0x02), value_1))\n                        /// @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\"\n                        mstore(_4, _9)\n                        mstore(32, _4)\n                        let dataSlot := keccak256(_4, _2)\n                        sstore(dataSlot, add(sload(/** @src 2:8899:8927  \"_balances[account] += amount\" */ dataSlot), /** @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\" */ value_1))\n                        /// @src 2:8952:8989  \"Transfer(address(0), account, amount)\"\n                        let _10 := /** @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\" */ mload(_2)\n                        mstore(_10, value_1)\n                        /// @src 2:8952:8989  \"Transfer(address(0), account, amount)\"\n                        log3(_10, /** @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\" */ 32, /** @src 2:8952:8989  \"Transfer(address(0), account, amount)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, /** @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\" */ _4, /** @src 2:8952:8989  \"Transfer(address(0), account, amount)\" */ _9)\n                        /// @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\"\n                        return(_4, _4)\n                    }\n                    case 0x42966c68 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                        /// @src 4:653:659  \"amount\"\n                        fun_burn(/** @src 6:719:729  \"msg.sender\" */ caller(), /** @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\" */ calldataload(_3))\n                        return(_4, _4)\n                    }\n                    case 0x70a08231 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                        mstore(_4, and(abi_decode_address(), sub(shl(160, 1), 1)))\n                        mstore(32, _4)\n                        let _11 := sload(keccak256(_4, _2))\n                        let memPos_5 := mload(_2)\n                        mstore(memPos_5, _11)\n                        return(memPos_5, 32)\n                    }\n                    case 0x715018a6 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        /// @src 1:1063:1125  \"modifier onlyOwner() {...\"\n                        fun_checkOwner()\n                        /// @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\"\n                        let _12 := sload(/** @src 1:2518:2524  \"_owner\" */ 0x05)\n                        /// @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\"\n                        sstore(/** @src 1:2518:2524  \"_owner\" */ 0x05, /** @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\" */ and(_12, shl(160, 0xffffffffffffffffffffffff)))\n                        /// @src 1:2566:2606  \"OwnershipTransferred(oldOwner, newOwner)\"\n                        log3(/** @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\" */ _4, _4, /** @src 1:2566:2606  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\" */ and(_12, sub(shl(160, 1), 1)), _4)\n                        return(_4, _4)\n                    }\n                    case 0x79cc6790 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                        let value0_4 := abi_decode_address()\n                        let value_2 := calldataload(36)\n                        /// @src 4:1088:1094  \"amount\"\n                        fun_spendAllowance(value0_4, /** @src 6:719:729  \"msg.sender\" */ caller(), /** @src 4:1088:1094  \"amount\" */ value_2)\n                        /// @src 4:1120:1126  \"amount\"\n                        fun_burn(value0_4, value_2)\n                        /// @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\"\n                        return(_4, _4)\n                    }\n                    case 0x8da5cb5b {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        let value_3 := and(sload(/** @src 1:1273:1279  \"_owner\" */ 0x05), /** @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\" */ sub(shl(160, 1), 1))\n                        let memPos_6 := mload(_2)\n                        mstore(memPos_6, value_3)\n                        return(memPos_6, 32)\n                    }\n                    case 0x95d89b41 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        let memPtr_1 := mload(_2)\n                        let ret_1 := _4\n                        let slotValue_1 := sload(_3)\n                        let length_1 := _4\n                        let _13 := 1\n                        length_1 := shr(_13, slotValue_1)\n                        let outOfPlaceEncoding_1 := and(slotValue_1, _13)\n                        if iszero(outOfPlaceEncoding_1)\n                        {\n                            length_1 := and(length_1, 0x7f)\n                        }\n                        let _14 := 32\n                        if eq(outOfPlaceEncoding_1, lt(length_1, _14))\n                        {\n                            mstore(_4, shl(224, 0x4e487b71))\n                            mstore(_3, 0x22)\n                            revert(_4, 0x24)\n                        }\n                        mstore(memPtr_1, length_1)\n                        switch outOfPlaceEncoding_1\n                        case 0 {\n                            mstore(add(memPtr_1, _14), and(slotValue_1, not(255)))\n                            ret_1 := add(add(memPtr_1, shl(5, iszero(iszero(length_1)))), _14)\n                        }\n                        case 1 {\n                            mstore(_4, _3)\n                            let dataPos_1 := 62514009886607029107290561805838585334079798074568712924583230797734656856475\n                            let i_1 := _4\n                            for { } lt(i_1, length_1) { i_1 := add(i_1, _14) }\n                            {\n                                mstore(add(add(memPtr_1, i_1), _14), sload(dataPos_1))\n                                dataPos_1 := add(dataPos_1, _13)\n                            }\n                            ret_1 := add(add(memPtr_1, i_1), _14)\n                        }\n                        let newFreePtr_1 := add(memPtr_1, and(add(sub(ret_1, memPtr_1), 31), not(31)))\n                        if or(gt(newFreePtr_1, 0xffffffffffffffff), lt(newFreePtr_1, memPtr_1))\n                        {\n                            mstore(_4, shl(224, 0x4e487b71))\n                            mstore(_3, 0x41)\n                            revert(_4, 0x24)\n                        }\n                        mstore(_2, newFreePtr_1)\n                        return(newFreePtr_1, sub(abi_encode_string(newFreePtr_1, memPtr_1), newFreePtr_1))\n                    }\n                    case 0xa457c2d7 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                        let value0_5 := abi_decode_address()\n                        let value_4 := calldataload(36)\n                        mstore(_4, /** @src 6:719:729  \"msg.sender\" */ caller())\n                        /// @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\"\n                        mstore(32, 1)\n                        let _15 := keccak256(_4, _2)\n                        mstore(_4, and(value0_5, sub(shl(160, 1), 1)))\n                        mstore(32, _15)\n                        let _16 := sload(keccak256(_4, _2))\n                        if /** @src 2:6792:6827  \"currentAllowance >= subtractedValue\" */ lt(_16, value_4)\n                        /// @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\"\n                        {\n                            let memPtr_2 := mload(_2)\n                            mstore(memPtr_2, shl(229, 4594637))\n                            mstore(add(memPtr_2, _3), 32)\n                            mstore(add(memPtr_2, 36), 37)\n                            mstore(add(memPtr_2, 68), \"ERC20: decreased allowance below\")\n                            mstore(add(memPtr_2, 100), \" zero\")\n                            revert(memPtr_2, 132)\n                        }\n                        /// @src 2:6928:6962  \"currentAllowance - subtractedValue\"\n                        fun_approve(/** @src 6:719:729  \"msg.sender\" */ caller(), /** @src 2:6928:6962  \"currentAllowance - subtractedValue\" */ value0_5, /** @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\" */ sub(/** @src 2:6928:6962  \"currentAllowance - subtractedValue\" */ _16, value_4))\n                        /// @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\"\n                        let memPos_7 := mload(_2)\n                        mstore(memPos_7, 1)\n                        return(memPos_7, 32)\n                    }\n                    case 0xa9059cbb {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                        let value0_6 := abi_decode_address()\n                        /// @src 2:3894:3900  \"amount\"\n                        fun_transfer(/** @src 6:719:729  \"msg.sender\" */ caller(), /** @src 2:3894:3900  \"amount\" */ value0_6, /** @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\" */ calldataload(36))\n                        let memPos_8 := mload(_2)\n                        mstore(memPos_8, 1)\n                        return(memPos_8, 32)\n                    }\n                    case 0xdd62ed3e {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                        let value0_7 := abi_decode_address()\n                        let value1_1 := abi_decode_address_7055()\n                        let _17 := sub(shl(160, 1), 1)\n                        mstore(_4, and(value0_7, _17))\n                        mstore(32, /** @src 2:4102:4113  \"_allowances\" */ 0x01)\n                        /// @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\"\n                        let _18 := keccak256(_4, _2)\n                        mstore(_4, and(value1_1, _17))\n                        mstore(32, _18)\n                        let _19 := sload(keccak256(_4, _2))\n                        let memPos_9 := mload(_2)\n                        mstore(memPos_9, _19)\n                        return(memPos_9, 32)\n                    }\n                    case 0xf2fde38b {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                        let value0_8 := abi_decode_address()\n                        /// @src 1:1063:1125  \"modifier onlyOwner() {...\"\n                        fun_checkOwner()\n                        /// @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\"\n                        let _20 := sub(shl(160, 1), 1)\n                        let _21 := and(/** @src 1:2162:2184  \"newOwner != address(0)\" */ value0_8, /** @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\" */ _20)\n                        if /** @src 1:2162:2184  \"newOwner != address(0)\" */ iszero(/** @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\" */ _21)\n                        {\n                            let memPtr_3 := mload(_2)\n                            mstore(memPtr_3, shl(229, 4594637))\n                            mstore(add(memPtr_3, _3), 32)\n                            mstore(add(memPtr_3, 36), 38)\n                            mstore(add(memPtr_3, 68), \"Ownable: new owner is the zero a\")\n                            mstore(add(memPtr_3, 100), \"ddress\")\n                            revert(memPtr_3, 132)\n                        }\n                        let _22 := sload(/** @src 1:2518:2524  \"_owner\" */ 0x05)\n                        /// @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\"\n                        sstore(/** @src 1:2518:2524  \"_owner\" */ 0x05, /** @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\" */ or(and(_22, shl(160, 0xffffffffffffffffffffffff)), _21))\n                        /// @src 1:2566:2606  \"OwnershipTransferred(oldOwner, newOwner)\"\n                        log3(/** @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\" */ _4, _4, /** @src 1:2566:2606  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\" */ and(_22, _20), /** @src 1:2566:2606  \"OwnershipTransferred(oldOwner, newOwner)\" */ _21)\n                        /// @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\"\n                        return(_4, _4)\n                    }\n                }\n                revert(0, 0)\n            }\n            function abi_encode_string(headStart, value0) -> tail\n            {\n                let _1 := 32\n                mstore(headStart, _1)\n                let length := mload(value0)\n                mstore(add(headStart, _1), length)\n                let i := 0\n                for { } lt(i, length) { i := add(i, _1) }\n                {\n                    mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n                }\n                mstore(add(add(headStart, length), 64), 0)\n                tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n            }\n            function abi_decode_address() -> value\n            {\n                value := calldataload(4)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function abi_decode_address_7055() -> value\n            {\n                value := calldataload(36)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            /// @ast-id 104 @src 1:1359:1489  \"function _checkOwner() internal view virtual {...\"\n            function fun_checkOwner()\n            {\n                /// @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\"\n                let value := and(sload(/** @src 1:1273:1279  \"_owner\" */ 0x05), /** @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\" */ sub(shl(160, 1), 1))\n                if iszero(/** @src 1:1422:1445  \"owner() == _msgSender()\" */ eq(/** @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\" */ value, /** @src 6:719:729  \"msg.sender\" */ caller()))\n                /// @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\"\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 32)\n                    mstore(add(memPtr, 68), \"Ownable: caller is not the owner\")\n                    revert(memPtr, 100)\n                }\n            }\n            function checked_add_uint256(x, y) -> sum\n            {\n                sum := add(x, y)\n                if gt(x, sum)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x11)\n                    revert(0, 0x24)\n                }\n            }\n            /// @ast-id 509 @src 2:7456:8244  \"function _transfer(address from, address to, uint256 amount) internal virtual {...\"\n            function fun_transfer(var_from, var_to, var_amount)\n            {\n                /// @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\"\n                let _1 := sub(shl(160, 1), 1)\n                let _2 := and(/** @src 2:7552:7570  \"from != address(0)\" */ var_from, /** @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\" */ _1)\n                if /** @src 2:7552:7570  \"from != address(0)\" */ iszero(/** @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\" */ _2)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 37)\n                    mstore(add(memPtr, 68), \"ERC20: transfer from the zero ad\")\n                    mstore(add(memPtr, 100), \"dress\")\n                    revert(memPtr, 132)\n                }\n                let _3 := and(/** @src 2:7630:7646  \"to != address(0)\" */ var_to, /** @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\" */ _1)\n                if /** @src 2:7630:7646  \"to != address(0)\" */ iszero(/** @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\" */ _3)\n                {\n                    let memPtr_1 := mload(64)\n                    mstore(memPtr_1, shl(229, 4594637))\n                    mstore(add(memPtr_1, 4), 32)\n                    mstore(add(memPtr_1, 36), 35)\n                    mstore(add(memPtr_1, 68), \"ERC20: transfer to the zero addr\")\n                    mstore(add(memPtr_1, 100), \"ess\")\n                    revert(memPtr_1, 132)\n                }\n                /// @src 2:7568:7569  \"0\"\n                let _4 := 0x00\n                /// @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\"\n                mstore(/** @src 2:7568:7569  \"0\" */ _4, /** @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\" */ _2)\n                mstore(0x20, /** @src 2:7568:7569  \"0\" */ _4)\n                /// @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\"\n                let _5 := sload(keccak256(/** @src 2:7568:7569  \"0\" */ _4, /** @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\" */ 0x40))\n                if /** @src 2:7801:7822  \"fromBalance >= amount\" */ lt(_5, var_amount)\n                /// @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\"\n                {\n                    let memPtr_2 := mload(0x40)\n                    mstore(memPtr_2, shl(229, 4594637))\n                    mstore(add(memPtr_2, 4), 0x20)\n                    mstore(add(memPtr_2, 36), 38)\n                    mstore(add(memPtr_2, 68), \"ERC20: transfer amount exceeds b\")\n                    mstore(add(memPtr_2, 100), \"alance\")\n                    revert(memPtr_2, 132)\n                }\n                mstore(/** @src 2:7568:7569  \"0\" */ _4, /** @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\" */ _2)\n                mstore(0x20, /** @src 2:7568:7569  \"0\" */ _4)\n                /// @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\"\n                sstore(keccak256(/** @src 2:7568:7569  \"0\" */ _4, /** @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\" */ 0x40), sub(/** @src 2:7917:7937  \"fromBalance - amount\" */ _5, var_amount))\n                /// @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\"\n                mstore(/** @src 2:7568:7569  \"0\" */ _4, /** @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\" */ _3)\n                let dataSlot := keccak256(/** @src 2:7568:7569  \"0\" */ _4, /** @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\" */ 0x40)\n                sstore(dataSlot, add(sload(/** @src 2:8114:8137  \"_balances[to] += amount\" */ dataSlot), /** @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\" */ var_amount))\n                /// @src 2:8163:8189  \"Transfer(from, to, amount)\"\n                let _6 := /** @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\" */ mload(0x40)\n                mstore(_6, var_amount)\n                /// @src 2:8163:8189  \"Transfer(from, to, amount)\"\n                log3(_6, /** @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\" */ 0x20, /** @src 2:8163:8189  \"Transfer(from, to, amount)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, _2, _3)\n            }\n            /// @ast-id 683 @src 2:10457:10797  \"function _approve(address owner, address spender, uint256 amount) internal virtual {...\"\n            function fun_approve(var_owner, var_spender, var_amount)\n            {\n                /// @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\"\n                let _1 := sub(shl(160, 1), 1)\n                let _2 := and(/** @src 2:10558:10577  \"owner != address(0)\" */ var_owner, /** @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\" */ _1)\n                if /** @src 2:10558:10577  \"owner != address(0)\" */ iszero(/** @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\" */ _2)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 36)\n                    mstore(add(memPtr, 68), \"ERC20: approve from the zero add\")\n                    mstore(add(memPtr, 100), \"ress\")\n                    revert(memPtr, 132)\n                }\n                let _3 := and(/** @src 2:10636:10657  \"spender != address(0)\" */ var_spender, /** @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\" */ _1)\n                if /** @src 2:10636:10657  \"spender != address(0)\" */ iszero(/** @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\" */ _3)\n                {\n                    let memPtr_1 := mload(64)\n                    mstore(memPtr_1, shl(229, 4594637))\n                    mstore(add(memPtr_1, 4), 32)\n                    mstore(add(memPtr_1, 36), 34)\n                    mstore(add(memPtr_1, 68), \"ERC20: approve to the zero addre\")\n                    mstore(add(memPtr_1, 100), \"ss\")\n                    revert(memPtr_1, 132)\n                }\n                mstore(/** @src 2:10575:10576  \"0\" */ 0x00, /** @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\" */ _2)\n                mstore(0x20, /** @src 2:10707:10718  \"_allowances\" */ 0x01)\n                /// @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\"\n                let _4 := keccak256(/** @src 2:10575:10576  \"0\" */ 0x00, /** @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\" */ 0x40)\n                mstore(/** @src 2:10575:10576  \"0\" */ 0x00, /** @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\" */ _3)\n                mstore(0x20, _4)\n                sstore(keccak256(/** @src 2:10575:10576  \"0\" */ 0x00, /** @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\" */ 0x40), var_amount)\n                /// @src 2:10758:10790  \"Approval(owner, spender, amount)\"\n                let _5 := /** @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\" */ mload(0x40)\n                mstore(_5, var_amount)\n                /// @src 2:10758:10790  \"Approval(owner, spender, amount)\"\n                log3(_5, /** @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\" */ 0x20, /** @src 2:10758:10790  \"Approval(owner, spender, amount)\" */ 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925, _2, _3)\n            }\n            /// @ast-id 726 @src 2:11078:11489  \"function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {...\"\n            function fun_spendAllowance(var_owner, var_spender, var_amount)\n            {\n                /// @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\"\n                let _1 := sub(shl(160, 1), 1)\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\" */ and(var_owner, _1))\n                mstore(0x20, /** @src 2:4102:4113  \"_allowances\" */ 0x01)\n                /// @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\"\n                let _2 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\" */ 0x40)\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\" */ and(var_spender, _1))\n                mstore(0x20, _2)\n                let _3 := sload(keccak256(/** @src -1:-1:-1 */ 0, /** @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\" */ 0x40))\n                /// @src 2:11240:11483  \"if (currentAllowance != type(uint256).max) {...\"\n                if /** @src 2:11244:11281  \"currentAllowance != type(uint256).max\" */ iszero(eq(_3, /** @src 2:11264:11281  \"type(uint256).max\" */ not(0)))\n                /// @src 2:11240:11483  \"if (currentAllowance != type(uint256).max) {...\"\n                {\n                    /// @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\"\n                    if /** @src 2:11305:11331  \"currentAllowance >= amount\" */ lt(_3, var_amount)\n                    /// @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\"\n                    {\n                        let memPtr := mload(0x40)\n                        mstore(memPtr, shl(229, 4594637))\n                        mstore(add(memPtr, 4), 0x20)\n                        mstore(add(memPtr, 36), 29)\n                        mstore(add(memPtr, 68), \"ERC20: insufficient allowance\")\n                        revert(memPtr, 100)\n                    }\n                    /// @src 2:11432:11457  \"currentAllowance - amount\"\n                    fun_approve(var_owner, var_spender, /** @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\" */ sub(/** @src 2:11432:11457  \"currentAllowance - amount\" */ _3, var_amount))\n                }\n            }\n            /// @ast-id 638 @src 2:9375:10034  \"function _burn(address account, uint256 amount) internal virtual {...\"\n            function fun_burn(var_account, var_amount)\n            {\n                /// @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\"\n                let _1 := and(/** @src 2:9458:9479  \"account != address(0)\" */ var_account, /** @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\" */ sub(shl(160, 1), 1))\n                if /** @src 2:9458:9479  \"account != address(0)\" */ iszero(/** @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\" */ _1)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 33)\n                    mstore(add(memPtr, 68), \"ERC20: burn from the zero addres\")\n                    mstore(add(memPtr, 100), \"s\")\n                    revert(memPtr, 132)\n                }\n                /// @src 2:9477:9478  \"0\"\n                let _2 := 0x00\n                /// @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\"\n                mstore(/** @src 2:9477:9478  \"0\" */ _2, /** @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\" */ _1)\n                mstore(0x20, /** @src 2:9477:9478  \"0\" */ _2)\n                /// @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\"\n                let _3 := sload(keccak256(/** @src 2:9477:9478  \"0\" */ _2, /** @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\" */ 0x40))\n                if /** @src 2:9649:9673  \"accountBalance >= amount\" */ lt(_3, var_amount)\n                /// @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\"\n                {\n                    let memPtr_1 := mload(0x40)\n                    mstore(memPtr_1, shl(229, 4594637))\n                    mstore(add(memPtr_1, 4), 0x20)\n                    mstore(add(memPtr_1, 36), 34)\n                    mstore(add(memPtr_1, 68), \"ERC20: burn amount exceeds balan\")\n                    mstore(add(memPtr_1, 100), \"ce\")\n                    revert(memPtr_1, 132)\n                }\n                mstore(/** @src 2:9477:9478  \"0\" */ _2, /** @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\" */ _1)\n                mstore(0x20, /** @src 2:9477:9478  \"0\" */ _2)\n                /// @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\"\n                sstore(keccak256(/** @src 2:9477:9478  \"0\" */ _2, /** @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\" */ 0x40), sub(/** @src 2:9767:9790  \"accountBalance - amount\" */ _3, var_amount))\n                /// @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\"\n                sstore(/** @src 2:9883:9905  \"_totalSupply -= amount\" */ 0x02, /** @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\" */ sub(sload(/** @src 2:9883:9905  \"_totalSupply -= amount\" */ 0x02), /** @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\" */ var_amount))\n                /// @src 2:9931:9968  \"Transfer(account, address(0), amount)\"\n                let _4 := /** @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\" */ mload(0x40)\n                mstore(_4, var_amount)\n                /// @src 2:9931:9968  \"Transfer(account, address(0), amount)\"\n                log3(_4, /** @src 0:250:541  \"contract TestToken is ERC20, Ownable, ERC20Burnable {...\" */ 0x20, /** @src 2:9931:9968  \"Transfer(account, address(0), amount)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, _1, /** @src 2:9477:9478  \"0\" */ _2)\n            }\n        }\n        data \".metadata\" hex\"a2646970667358221220125294266c5a6b06c77f565103be432c9e27072c4fed32d5ff42704f996e941564736f6c63430008130033\"\n    }\n}\n",
      "hash": "010001df657f157523dcb3a933e6fc9d04b633750db1088894f940fb9c94d59c",
      "factoryDependencies": {}
    }
  })